/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author waldonavarro
 */
public class Alejandro extends javax.swing.JFrame {

    /**
     * Creates new form Alejandro
     */
    public Alejandro() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton3 = new javax.swing.JButton();
        screen = new javax.swing.JTextField();
        percentage = new javax.swing.JButton();
        cleare = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        division = new javax.swing.JButton();
        sqrt = new javax.swing.JButton();
        onediv = new javax.swing.JButton();
        sqrtroot = new javax.swing.JButton();
        multiplication = new javax.swing.JButton();
        minus = new javax.swing.JButton();
        button5 = new javax.swing.JButton();
        button4 = new javax.swing.JButton();
        button6 = new javax.swing.JButton();
        button8 = new javax.swing.JButton();
        button7 = new javax.swing.JButton();
        button9 = new javax.swing.JButton();
        button1 = new javax.swing.JButton();
        button3 = new javax.swing.JButton();
        button0 = new javax.swing.JButton();
        plusminus = new javax.swing.JButton();
        point = new javax.swing.JButton();
        button2 = new javax.swing.JButton();
        plus = new javax.swing.JButton();
        equal = new javax.swing.JButton();
        factorial = new javax.swing.JButton();
        sum = new javax.swing.JButton();
        power = new javax.swing.JButton();
        pi = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jButton3.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(0, 0, 0));

        screen.setBackground(new java.awt.Color(226, 220, 200));
        screen.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        screen.setForeground(new java.awt.Color(16, 15, 15));
        screen.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        screen.setText("0");

        percentage.setBackground(new java.awt.Color(15, 61, 62));
        percentage.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        percentage.setForeground(new java.awt.Color(241, 241, 241));
        percentage.setText("%");
        percentage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                percentageActionPerformed(evt);
            }
        });

        cleare.setBackground(new java.awt.Color(15, 61, 62));
        cleare.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        cleare.setForeground(new java.awt.Color(241, 241, 241));
        cleare.setText("CE");
        cleare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cleareActionPerformed(evt);
            }
        });

        clear.setBackground(new java.awt.Color(15, 61, 62));
        clear.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        clear.setForeground(new java.awt.Color(241, 241, 241));
        clear.setText("C");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        delete.setBackground(new java.awt.Color(15, 61, 62));
        delete.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        delete.setForeground(new java.awt.Color(241, 241, 241));
        delete.setText("DEL");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        division.setBackground(new java.awt.Color(15, 61, 62));
        division.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        division.setForeground(new java.awt.Color(241, 241, 241));
        division.setText("/");
        division.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divisionActionPerformed(evt);
            }
        });

        sqrt.setBackground(new java.awt.Color(15, 61, 62));
        sqrt.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        sqrt.setForeground(new java.awt.Color(241, 241, 241));
        sqrt.setText("X2");
        sqrt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sqrtActionPerformed(evt);
            }
        });

        onediv.setBackground(new java.awt.Color(15, 61, 62));
        onediv.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        onediv.setForeground(new java.awt.Color(241, 241, 241));
        onediv.setText("1/X");
        onediv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onedivActionPerformed(evt);
            }
        });

        sqrtroot.setBackground(new java.awt.Color(15, 61, 62));
        sqrtroot.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        sqrtroot.setForeground(new java.awt.Color(241, 241, 241));
        sqrtroot.setText("2âˆš");
        sqrtroot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sqrtrootActionPerformed(evt);
            }
        });

        multiplication.setBackground(new java.awt.Color(15, 61, 62));
        multiplication.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        multiplication.setForeground(new java.awt.Color(241, 241, 241));
        multiplication.setText("X");
        multiplication.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiplicationActionPerformed(evt);
            }
        });

        minus.setBackground(new java.awt.Color(15, 61, 62));
        minus.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        minus.setForeground(new java.awt.Color(241, 241, 241));
        minus.setText("-");
        minus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusActionPerformed(evt);
            }
        });

        button5.setBackground(new java.awt.Color(16, 15, 15));
        button5.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        button5.setForeground(new java.awt.Color(226, 220, 200));
        button5.setText("5");
        button5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button5ActionPerformed(evt);
            }
        });

        button4.setBackground(new java.awt.Color(16, 15, 15));
        button4.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        button4.setForeground(new java.awt.Color(226, 220, 200));
        button4.setText("4");
        button4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button4ActionPerformed(evt);
            }
        });

        button6.setBackground(new java.awt.Color(16, 15, 15));
        button6.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        button6.setForeground(new java.awt.Color(226, 220, 200));
        button6.setText("6");
        button6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button6ActionPerformed(evt);
            }
        });

        button8.setBackground(new java.awt.Color(16, 15, 15));
        button8.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        button8.setForeground(new java.awt.Color(226, 220, 200));
        button8.setText("8");
        button8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button8ActionPerformed(evt);
            }
        });

        button7.setBackground(new java.awt.Color(16, 15, 15));
        button7.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        button7.setForeground(new java.awt.Color(226, 220, 200));
        button7.setText("7");
        button7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button7ActionPerformed(evt);
            }
        });

        button9.setBackground(new java.awt.Color(16, 15, 15));
        button9.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        button9.setForeground(new java.awt.Color(226, 220, 200));
        button9.setText("9");
        button9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button9ActionPerformed(evt);
            }
        });

        button1.setBackground(new java.awt.Color(16, 15, 15));
        button1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        button1.setForeground(new java.awt.Color(226, 220, 200));
        button1.setText("1");
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });

        button3.setBackground(new java.awt.Color(16, 15, 15));
        button3.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        button3.setForeground(new java.awt.Color(226, 220, 200));
        button3.setText("3");
        button3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button3ActionPerformed(evt);
            }
        });

        button0.setBackground(new java.awt.Color(16, 15, 15));
        button0.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        button0.setForeground(new java.awt.Color(226, 220, 200));
        button0.setText("0");
        button0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button0ActionPerformed(evt);
            }
        });

        plusminus.setBackground(new java.awt.Color(15, 61, 62));
        plusminus.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        plusminus.setForeground(new java.awt.Color(241, 241, 241));
        plusminus.setText("Â±");
        plusminus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusminusActionPerformed(evt);
            }
        });

        point.setBackground(new java.awt.Color(15, 61, 62));
        point.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        point.setForeground(new java.awt.Color(241, 241, 241));
        point.setText(".");
        point.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pointActionPerformed(evt);
            }
        });

        button2.setBackground(new java.awt.Color(16, 15, 15));
        button2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        button2.setForeground(new java.awt.Color(226, 220, 200));
        button2.setText("2");
        button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button2ActionPerformed(evt);
            }
        });

        plus.setBackground(new java.awt.Color(15, 61, 62));
        plus.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        plus.setForeground(new java.awt.Color(241, 241, 241));
        plus.setText("+");
        plus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusActionPerformed(evt);
            }
        });

        equal.setBackground(new java.awt.Color(15, 61, 62));
        equal.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        equal.setForeground(new java.awt.Color(241, 241, 241));
        equal.setText("=");
        equal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equalActionPerformed(evt);
            }
        });

        factorial.setBackground(new java.awt.Color(15, 61, 62));
        factorial.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        factorial.setForeground(new java.awt.Color(241, 241, 241));
        factorial.setText("!");
        factorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                factorialActionPerformed(evt);
            }
        });

        sum.setBackground(new java.awt.Color(15, 61, 62));
        sum.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        sum.setForeground(new java.awt.Color(241, 241, 241));
        sum.setText("Î£");
        sum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sumActionPerformed(evt);
            }
        });

        power.setBackground(new java.awt.Color(15, 61, 62));
        power.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        power.setForeground(new java.awt.Color(241, 241, 241));
        power.setText("P");
        power.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                powerActionPerformed(evt);
            }
        });

        pi.setBackground(new java.awt.Color(15, 61, 62));
        pi.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        pi.setForeground(new java.awt.Color(241, 241, 241));
        pi.setText("Ï€");
        pi.setToolTipText("");
        pi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                piActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tw Cen MT", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(15, 61, 62));
        jLabel1.setText("  Calculator Alejandro");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button3, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(plusminus, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button0, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(point, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(plus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(equal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(power, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sum, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pi, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(division, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(button7, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(button8, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(button9, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(multiplication, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(button4, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(button5, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(button6, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(minus, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(onediv, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sqrt, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sqrtroot, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(factorial, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(screen)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(percentage, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cleare, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(screen, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(percentage, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(cleare, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(clear, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(delete, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(onediv, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(sqrt, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(sqrtroot, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(factorial, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(power, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(sum, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(pi, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(division, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button7, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(button8, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(button9, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(multiplication, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button4, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(button5, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(button6, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(minus, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(button1, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                            .addComponent(button2, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                            .addComponent(button3, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(plusminus, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                            .addComponent(button0, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                            .addComponent(point, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(plus, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(equal, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public String operate = "";
    public String  word, word2, opVar; // operation string to work with them, word and word2 strings to store information when needed.
    public double a,b,result; //variables to store the information from the screen to make the operations work.
    
    // method to make the number related keys of the calculator
    private void keys(javax.swing.JButton button) {
    //if the screen shows 0 or error at the press of a key it will change the screen to that number.
        if(screen.getText().equals("0") || screen.getText().matches(".*[a-zA-Z]+.*")){ 
            screen.setText(button.getText());
        }
        else if (opVar.equals("equal")){
            screen.setText(button.getText());
            opVar = "";
        }
        //is there is an operation currently in operation the screen will show the result of said operation and then at the press of a key it will change the screen to that number.
//        else if("operating".equals(opVar)){ 
//            screen.setText(button.getText());
//            opVar = "";
//        }
        //In any other case at the press of a key it will keep adding numbers to what is shown in the screen.
        else
            screen.setText(screen.getText() + button.getText());
    }
    
    private void operation(String op){
        if (operate != ""){       
                switch(op){
                case "plus":{
                    a = a + Double.parseDouble(screen.getText());
                    break;
                }
               
                case "minus":{
                    a = a - Double.parseDouble(screen.getText());
                    break;
                }
                case "mult":
                    a = a*Double.parseDouble(screen.getText());
                    break;
                case "div":
                    
                    a = a/Double.parseDouble(screen.getText());
                    break;
                case "perc":
                
                    a =(Double.parseDouble(screen.getText())/100)*a;
                    break;
                case "pow":{
                    result = a;
                    if (b == 0)
                        result = 1;
                    else if (b >= 0){ 
                    for(int i = 0;i<b-1;i++)
                        result = result*a;
                    a = result;
                    }
                    
                    else {
                    for(int i = 0;i<-b-1;i++)
                        result = result/a;
                    a = result;
                    }
                    break;
                }
            }
              screen.setText(cleanw("" + a));
              opVar = "equal";
        }
        else {
               a = Double.parseDouble(screen.getText());
               screen.setText("0");
                }
//        
//        word = Double.toString(a);
//        screen.setText(cleanw(word));
//        opVar = "operating";
    } 
    
    
    // method to turn any String like a float number ending in ".0" to a String that looks like a integer.
    private String cleanw(String string){
        if (string.endsWith(".0"))
            string = string.substring(0,string.length()-2);
        return string;
    }
                
    
    private void percentageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_percentageActionPerformed
            operation(operate);
            operate = "perc";
        
//        operate = "perc";
//        a = Double.parseDouble(screen.getText());
//        screen.setText("0");   
    }//GEN-LAST:event_percentageActionPerformed

    private void cleareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cleareActionPerformed
        screen.setText("0");
        a = 0;
        b = 0;
        result = 0;
        operate = "";
        word = "";       
    }//GEN-LAST:event_cleareActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        screen.setText("0");
    }//GEN-LAST:event_clearActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        if (screen.getText().length() == 1 || (screen.getText().length() == 2 && screen.getText().startsWith("-")))
            screen.setText("0");
        else
            screen.setText(screen.getText().substring(0,screen.getText().length()-1));
    }//GEN-LAST:event_deleteActionPerformed

    private void divisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divisionActionPerformed
            operation(operate);
            operate = "div";
        
//        if (!"div".equals(operate)){
//            operate = "div";
//            a = Float.parseFloat(screen.getText());
//            screen.setText("0");            
//        }
//        else if ("0".equals(screen.getText())){
//            operate = "div";          
//        }
//        else{        
//            b = Float.parseFloat(screen.getText());
//            a = a / b;
//            word = Double.toString(a);
//            screen.setText(cleanw(word));
//            word2 = "div";
//            operate = "operating";
//        }
    }//GEN-LAST:event_divisionActionPerformed

    private void sqrtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sqrtActionPerformed
        float x = Float.parseFloat(screen.getText());
        word = Float.toString(x*x);
        screen.setText(cleanw(word));
        x = 0;
    }//GEN-LAST:event_sqrtActionPerformed

    private void onedivActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onedivActionPerformed
        float x = Float.parseFloat(screen.getText());
        word = Float.toString(1/x);
        screen.setText(cleanw(word));
        x = 0;
    }//GEN-LAST:event_onedivActionPerformed

    private void sqrtrootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sqrtrootActionPerformed
        double x = Float.parseFloat(screen.getText());
        word = Double.toString(Math.sqrt(x));
        screen.setText(cleanw(word));
        x = 0;
    }//GEN-LAST:event_sqrtrootActionPerformed

    private void multiplicationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiplicationActionPerformed
            operation(operate);
            operate = "mult";
//        if (!"mult".equals(operate)){
//            operate = "mult";
//            a = Float.parseFloat(screen.getText());
//            screen.setText("0");            
//        }
//        else{
//            b = Double.parseDouble(screen.getText());
//            a = a * b;
//            word = Double.toString(a);
//            screen.setText(cleanw(word));
//            word2 = "mult";
//            operate = "operating";
//        }

    }//GEN-LAST:event_multiplicationActionPerformed

    private void minusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusActionPerformed
//        if ("".equals(operate)){
//            operate = "minus";
//            a = Float.parseFloat(screen.getText());
//            screen.setText("0");            
//        }
//        else
            operation(operate);
            operate = "minus";
//        else{
//            b = Double.parseDouble(screen.getText());
//            a = a-b;
//            word = Double.toString(a);
//            screen.setText(cleanw(word));
//            word2 = "minus";
//            operate = "operating";
//        }

    }//GEN-LAST:event_minusActionPerformed

    private void button5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button5ActionPerformed
        keys(button5);
    }//GEN-LAST:event_button5ActionPerformed

    private void button4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button4ActionPerformed
        keys(button4);
    }//GEN-LAST:event_button4ActionPerformed

    private void button6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button6ActionPerformed
        keys(button6);
    }//GEN-LAST:event_button6ActionPerformed

    private void button8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button8ActionPerformed
        keys(button8);
    }//GEN-LAST:event_button8ActionPerformed

    private void button7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button7ActionPerformed
        keys(button7);
    }//GEN-LAST:event_button7ActionPerformed

    private void button9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button9ActionPerformed
        keys(button9);  
    }//GEN-LAST:event_button9ActionPerformed

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        keys(button1);
    }//GEN-LAST:event_button1ActionPerformed

    private void button3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button3ActionPerformed
        keys(button3);
    }//GEN-LAST:event_button3ActionPerformed

    private void button0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button0ActionPerformed
        keys(button0);
    }//GEN-LAST:event_button0ActionPerformed

    private void plusminusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusminusActionPerformed
        if (screen.getText().startsWith("-"))
            screen.setText(screen.getText().substring(1));
        else if(!screen.getText().equals("0"))
            screen.setText("-" + screen.getText());    
    }//GEN-LAST:event_plusminusActionPerformed

    private void pointActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pointActionPerformed
        if (!screen.getText().contains("."))
            screen.setText(screen.getText()+point.getText());
    }//GEN-LAST:event_pointActionPerformed

    private void button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button2ActionPerformed
        keys(button2);
    }//GEN-LAST:event_button2ActionPerformed

    private void plusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusActionPerformed
//        if ("".equals(operate)){
//            operate = "plus";
//            a = Float.parseFloat(screen.getText());
//            screen.setText("0");
//        }
//        else
            operation(operate);
            operate = "plus";
//        else {
//            b = Double.parseDouble(screen.getText());
//            a = a + b;
//            word = Double.toString(a);
//            screen.setText(cleanw(word));
//            word2 = "plus";
//            operate = "operating";
//        }

    }//GEN-LAST:event_plusActionPerformed

    private void equalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equalActionPerformed
        switch(operate){
                case "plus":
                    b = Float.parseFloat(screen.getText());
                    result = a+b;
                    break;
               
                case "minus":
                    b = Float.parseFloat(screen.getText());
                    result = a-b;
                    break;
                case "mult":
                    b = Float.parseFloat(screen.getText());
                    result = a*b;
                    break;
                case "div":
                    b = Float.parseFloat(screen.getText());
                    result = a/b;
                    break;
                case "perc":
                    b = Float.parseFloat(screen.getText());
                    result =(b/100)*a;
                    break;
                case "pow":{
                    b = Double.parseDouble(screen.getText());
                    result = a;
                    if (b == 0)
                        result = 1;
                    else if (b >= 0) 
                    for(int i = 0;i<b-1;i++)
                        result = result*a;
                    
                    else 
                    for(int i = 0;i<-b-1;i++)
                        result = result/a;
                    
                    break;
                }
                    
        }
        word = Double.toString(result);
        screen.setText(cleanw(word));
//        a = 0;
//        b = 0;
//        result = 0;
        opVar = "equal";
        operate = "";
        a = 0;
        b = 0;
        result = 0;
//        opVar = "";
//        word = "";
    }//GEN-LAST:event_equalActionPerformed

    private void factorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_factorialActionPerformed
        word = screen.getText();
        long fact = 1;
        double n = Double.parseDouble(word);
        if (word.contains("."))
            screen.setText("input Integer");
        else{
            if (n >= 0) {
            for (int i = 1; i<=n; i++)
                fact = fact*i;
            screen.setText(cleanw("" + fact));
            }
        else if (n < 0){
            for (int i = 1; i<=-n; i++)
                fact = fact*-i;
            screen.setText(cleanw("" + fact));            
            }
        }

    }//GEN-LAST:event_factorialActionPerformed

    private void sumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sumActionPerformed
        double  sum = 0;
        word = screen.getText();
        if (!word.contains(".") && !word.contains("-")){
            double n = Double.parseDouble(word);
            for (int i = 0; i<=n; i++)
                sum = sum + i;
            screen.setText(cleanw("" + sum));
        

        }        
        else if (word.contains("-")){
            
            double n = Double.parseDouble(word.substring(1,word.length()));
            for (int i = 0; i<=n; i++)
                sum = sum + i;
            screen.setText(cleanw("-" + sum));        
        
        }
            
        else
            screen.setText("Input Integer");
        
    }//GEN-LAST:event_sumActionPerformed

    private void powerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_powerActionPerformed
            operation(operate);
            operate = "pow";
//        operate = "pow";
//        a = Double.parseDouble(screen.getText());
//        screen.setText("0");
    }//GEN-LAST:event_powerActionPerformed

    private void piActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_piActionPerformed
        screen.setText("3.14159");
    }//GEN-LAST:event_piActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Alejandro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Alejandro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Alejandro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Alejandro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Alejandro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button0;
    private javax.swing.JButton button1;
    private javax.swing.JButton button2;
    private javax.swing.JButton button3;
    private javax.swing.JButton button4;
    private javax.swing.JButton button5;
    private javax.swing.JButton button6;
    private javax.swing.JButton button7;
    private javax.swing.JButton button8;
    private javax.swing.JButton button9;
    private javax.swing.JButton clear;
    private javax.swing.JButton cleare;
    private javax.swing.JButton delete;
    private javax.swing.JButton division;
    private javax.swing.JButton equal;
    private javax.swing.JButton factorial;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton minus;
    private javax.swing.JButton multiplication;
    private javax.swing.JButton onediv;
    private javax.swing.JButton percentage;
    private javax.swing.JButton pi;
    private javax.swing.JButton plus;
    private javax.swing.JButton plusminus;
    private javax.swing.JButton point;
    private javax.swing.JButton power;
    private javax.swing.JTextField screen;
    private javax.swing.JButton sqrt;
    private javax.swing.JButton sqrtroot;
    private javax.swing.JButton sum;
    // End of variables declaration//GEN-END:variables
}
